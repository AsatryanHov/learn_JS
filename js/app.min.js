/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nhljs.highlightAll();\r\n\r\n// Нашли все заголовки табов по data атрибуту\r\nconst tabHeaders = document.querySelectorAll(\"[data-tab]\");\r\n// Нашли все контент боксы\r\nconst contentBoxes = document.querySelectorAll(\"[data-tab-content]\");\r\n\r\ntabHeaders.forEach(function (item) {\r\n  item.addEventListener(\"click\", function () {\r\n    // 1. Скрыть все content box\r\n    contentBoxes.forEach(function (item) {\r\n      item.classList.add(\"hidden\");\r\n    });\r\n\r\n    // 2. Выбрать нужный content box и показать его\r\n    const contentBox = document.querySelector(\"#\" + this.dataset.tab);\r\n    contentBox.classList.remove(\"hidden\");\r\n  });\r\n});\r\n\r\n//-------------------------------------------------------------------\r\n\r\n// Нашли все заголовки табов по data атрибуту\r\nconst tabHeadersTS = document.querySelectorAll(\"[data-tabts]\");\r\n// Нашли все контент боксы\r\nconst contentBoxesTS = document.querySelectorAll(\"[data-tabts-content]\");\r\n\r\ntabHeadersTS.forEach(function (item) {\r\n  item.addEventListener(\"click\", function () {\r\n    // 1. Скрыть все content box\r\n    contentBoxesTS.forEach(function (item) {\r\n      item.classList.add(\"hidden\");\r\n    });\r\n\r\n    // 2. Выбрать нужный content box и показать его\r\n    const contentBoxTS = document.querySelector(\"#\" + this.dataset.tabts);\r\n    contentBoxTS.classList.remove(\"hidden\");\r\n  });\r\n});\r\n\r\n// const scrollButton = document.getElementById(\"scrollButton\");\r\n// const header = document.getElementById(\"header\");\r\n\r\n// scrollButton.addEventListener(\"click\", () => {\r\n//   header.scrollIntoView({ behavior: \"smooth\" });\r\n// });\r\n\r\n//-----------------------ADAPTIVE FONT--------------------------------------\r\n\r\n// let html_element = document.querySelector(\"html\");\r\n\r\n// const setAdaptiveFontSize = () => {\r\n//   const x = window.innerWidth;\r\n//   const fz = document.querySelector(\".fz\");\r\n\r\n//   if (x > 1000) {\r\n//     html_element.style.fontSize = \"45px\";\r\n//     fz.style.fontSize = \"25px\";\r\n//   } else if (x > 800 && x < 999) {\r\n//     html_element.style.fontSize = \"40px\";\r\n//     fz.style.fontSize = \"20px\";\r\n//   } else if (x > 600 && x < 799) {\r\n//     html_element.style.fontSize = \"35px\";\r\n//     fz.style.fontSize = \"25px\";\r\n//   } else if (x > 400 && x < 599) {\r\n//     html_element.style.fontSize = \"30px\";\r\n//     fz.style.fontSize = \"10px\";\r\n//   } else if (x > 320 && x < 399) {\r\n//     html_element.style.fontSize = \"25px\";\r\n//     fz.style.fontSize = \"8px\";\r\n//   }\r\n// };\r\n\r\n// window.addEventListener(\"load\", setAdaptiveFontSize);\r\n// window.addEventListener(\"resize\", setAdaptiveFontSize);\r\n\r\n// ------------------------SCROLL TO TOP---------------------------\r\nfunction scrollToTop() {\r\n  window.scrollTo({\r\n    top: 0,\r\n    behavior: \"smooth\",\r\n  });\r\n}\r\n\r\nconst scrollToTopButton = document.getElementById(\"scrollToTopButton\");\r\n\r\nscrollToTopButton.addEventListener(\"click\", scrollToTop);\r\n\r\nwindow.addEventListener(\"scroll\", () => {\r\n  const scrolled = window.scrollY;\r\n  const scrollToTopButton = document.getElementById(\"scrollToTopButton\");\r\n});\r\n\r\nwindow.addEventListener(\"scroll\", () => {\r\n  const x = window.scrollY;\r\n  if (x > 800) {\r\n    scrollToTopButton.classList.remove(\"hidden\");\r\n    scrollToTopButton.classList.add(\"active\", \"fade\");\r\n  } else {\r\n    scrollToTopButton.classList.remove(\"active\", \"fade\");\r\n    scrollToTopButton.classList.add(\"hidden\");\r\n  }\r\n\r\n  /* console.log(scrolled); */\r\n});\r\n\r\n//-------------------------------------------------------------\r\n\n\n//# sourceURL=webpack://gulp-2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;